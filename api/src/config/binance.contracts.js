const X125_MPC_RANGE = [
  [1, 0, 50000, 101, 125, 0.8, 0.4, 0],
  [2, 50000, 250000, 51, 100, 1, 0.5, 50],
  [3, 250000, 1000000, 21, 50, 2, 1, 1300],
  [4, 1000000, 5000000, 11, 20, 5, 2.5, 16300],
  [5, 5000000, 20000000, 6, 10, 10, 5, 141300],
  [6, 20000000, 50000000, 5, 5, 20, 10, 1141300],
  [7, 50000000, 100000000, 4, 4, 25, 12.5, 2391300],
  [8, 100000000, 200000000, 3, 3, 33.3, 15, 4891300],
  [9, 200000000, 300000000, 2, 2, 50, 25, 24891300],
  [10, 300000000, 500000000, 1, 1, 100, 50, 99891300],
];

const X100_MPC_RANGE = [
  [1, 0, 10000, 76, 100, 1, 0.5, 0],
  [2, 10000, 100000, 51, 75, 1.3, 0.65, 15],
  [3, 100000, 500000, 26, 50, 2, 1, 365],
  [4, 500000, 1000000, 11, 25, 4, 2, 5365],
  [5, 1000000, 2000000, 6, 10, 10, 5, 35365],
  [6, 2000000, 5000000, 5, 5, 20, 10, 135365],
  [7, 5000000, 10000000, 4, 4, 25, 12.5, 260365],
  [8, 10000000, 20000000, 3, 3, 33, 15, 510365],
  [9, 20000000, 500000000, 2, 2, 50, 25, 2510365],
  [10, 20000000, 500000000, 1, 1, 100, 25, 2510365],
];

const X75_MPC_RANGE = [
  [1, 0, 10000, 51, 75, 1.33, 0.65, 0],
  [2, 10000, 50000, 26, 50, 2, 1, 35],
  [3, 50000, 250000, 11, 25, 4, 2, 535],
  [4, 250000, 1000000, 6, 10, 10, 5, 8035],
  [5, 1000000, 2000000, 5, 5, 20, 10, 58035],
  [6, 2000000, 5000000, 4, 4, 25, 12.5, 108035],
  [7, 5000000, 10000000, 3, 3, 33, 15, 233035],
  [8, 10000000, 500000000, 2, 2, 50, 25, 1233035],
  [9, 10000000, 500000000, 1, 1, 100, 25, 1233035],
];

const X50_MPC_RANGE = [
  [1, 0, 5000, 21, 50, 2, 1, 0],
  [2, 5000, 25000, 11, 20, 5, 2.5, 75],
  [3, 25000, 100000, 6, 10, 10, 5, 700],
  [4, 100000, 250000, 3, 5, 20, 10, 5700],
  [5, 250000, 1000000, 2, 2, 50, 12.5, 11950],
  [6, 1000000, 500000000, 1, 1, 100, 50, 386950],
];

const X50_2_MPC_RANGE = [
  [1, 0, 50000, 26, 50, 2, 1, 0],
  [2, 50000, 250000, 11, 25, 4, 2, 500],
  [3, 250000, 1000000, 6, 10, 10, 5, 8000],
  [4, 1000000, 2000000, 5, 5, 20, 10, 58000],
  [5, 2000000, 5000000, 4, 4, 25, 12.5, 108000],
  [6, 5000000, 10000000, 3, 3, 33.33, 16.65, 315500],
  [7, 10000000, 5000000, 2, 2, 50, 25, 1150500],
  [8, 10000000, 5000000, 1, 1, 100, 25, 1150500],
];

const X50_3_MPC_RANGE = [
  [1, 0, 50000, 21, 50, 2, 1, 0],
  [2, 50000, 150000, 11, 20, 5, 2.5, 750],
  [3, 150000, 250000, 6, 10, 10, 5, 4500],
  [4, 250000, 500000, 5, 5, 20, 10, 17000],
  [5, 500000, 750000, 3, 4, 25, 12.5, 29500],
  [6, 750000, 1000000, 2, 2, 50, 25, 123250],
  [7, 1000000, 30000000, 1, 1, 100, 50, 373250],
];

const X25_MPC_RANGE = [
  [1, 0, 5000, 21, 25, 4, 1, 0],
  [2, 5000, 25000, 11, 20, 5, 2.5, 75],
  [3, 25000, 100000, 6, 10, 10, 5, 700],
  [4, 100000, 250000, 3, 5, 20, 10, 5700],
  [5, 250000, 1000000, 2, 2, 50, 12.5, 11950],
  [6, 1000000, 500000000, 1, 1, 100, 50, 386950],
];

const contracts = {
  // 125X
  BTCUSDT: X125_MPC_RANGE,

  // 100X
  ETHUSDT: X100_MPC_RANGE,

  // 75X
  ADAUSDT: X75_MPC_RANGE,
  BNBUSDT: X75_MPC_RANGE,
  DOTUSDT: X75_MPC_RANGE,
  EOSUSDT: X75_MPC_RANGE,
  ETCUSDT: X75_MPC_RANGE,
  LINKUSDT: X75_MPC_RANGE,
  LTCUSDT: X75_MPC_RANGE,
  TRXUSDT: X75_MPC_RANGE,
  XLMUSDT: X75_MPC_RANGE,
  XMRUSDT: X75_MPC_RANGE,
  XRPUSDT: X75_MPC_RANGE,
  XTZUSDT: X75_MPC_RANGE,
  BCHUSDT: X75_MPC_RANGE,

  // 50X 1
  ALGOUSDT: X50_MPC_RANGE,
  ALPHAUSDT: X50_MPC_RANGE,
  ATOMUSDT: X50_MPC_RANGE,
  AVAXUSDT: X50_MPC_RANGE,
  AXSUSDT: X50_MPC_RANGE,
  BALUSDT: X50_MPC_RANGE,
  BANDUSDT: X50_MPC_RANGE,
  BATUSDT: X50_MPC_RANGE,
  BELUSDT: X50_MPC_RANGE,
  BLZUSDT: X50_MPC_RANGE,
  BZRXUSDT: X50_MPC_RANGE,
  COMPUSDT: X50_MPC_RANGE,
  CRVUSDT: X50_MPC_RANGE,
  CVCUSDT: X50_MPC_RANGE,
  DASHUSDT: X50_MPC_RANGE,
  DEFIUSDT: X50_MPC_RANGE,
  EGLDUSDT: X50_MPC_RANGE,
  ENJUSDT: X50_MPC_RANGE,
  FLMUSDT: X50_MPC_RANGE,
  FTMUSDT: X50_MPC_RANGE,
  HNTUSDT: X50_MPC_RANGE,
  ICXUSDT: X50_MPC_RANGE,
  IOSTUSDT: X50_MPC_RANGE,
  IOTAUSDT: X50_MPC_RANGE,
  KAVAUSDT: X50_MPC_RANGE,
  KNCUSDT: X50_MPC_RANGE,
  KSMUSDT: X50_MPC_RANGE,
  LRCUSDT: X50_MPC_RANGE,
  MKRUSDT: X50_MPC_RANGE,
  NEARUSDT: X50_MPC_RANGE,
  NEOUSDT: X50_MPC_RANGE,
  OCEANUSDT: X50_MPC_RANGE,
  OMGUSDT: X50_MPC_RANGE,
  ONTUSDT: X50_MPC_RANGE,
  QTUMUSDT: X50_MPC_RANGE,
  RENUSDT: X50_MPC_RANGE,
  RLCUSDT: X50_MPC_RANGE,
  RSRUSDT: X50_MPC_RANGE,
  RUNEUSDT: X50_MPC_RANGE,
  SNXUSDT: X50_MPC_RANGE,
  SRMUSDT: X50_MPC_RANGE,
  STORJUSDT: X50_MPC_RANGE,
  SUSHIUSDT: X50_MPC_RANGE,
  SXPUSDT: X50_MPC_RANGE,
  TOMOUSDT: X50_MPC_RANGE,
  TRBUSDT: X50_MPC_RANGE,
  VETUSDT: X50_MPC_RANGE,
  WAVESUSDT: X50_MPC_RANGE,
  YFIIUSDT: X50_MPC_RANGE,
  YFIUSDT: X50_MPC_RANGE,
  ZECUSDT: X50_MPC_RANGE,
  ZILUSDT: X50_MPC_RANGE,
  ZRXUSDT: X50_MPC_RANGE,
  ZENUSDT: X50_MPC_RANGE,
  SKLUSDT: X50_MPC_RANGE,
  GRTUSDT: X50_MPC_RANGE,
  "1INCHUSDT": X50_MPC_RANGE,
  CHZUSDT: X50_MPC_RANGE,
  CZHUSDT: X50_MPC_RANGE,
  AKROUSDT: X50_MPC_RANGE,
  SANDUSDT: X50_MPC_RANGE,
  ANKRUSDT: X50_MPC_RANGE,
  LUNAUSDT: X50_MPC_RANGE,
  BTSUSDT: X50_MPC_RANGE,
  LITUSDT: X50_MPC_RANGE,
  UNFIUSDT: X50_MPC_RANGE,
  DODOUSDT: X50_MPC_RANGE,
  REEFUSDT: X50_MPC_RANGE,
  RVNUSDT: X50_MPC_RANGE,
  SFPUSDT: X50_MPC_RANGE,
  XEMUSDT: X50_MPC_RANGE,
  COTIUSDT: X50_MPC_RANGE,
  CHRUSDT: X50_MPC_RANGE,
  MANAUSDT: X50_MPC_RANGE,
  HBARUSDT: X50_MPC_RANGE,
  ALICEUSDT: X50_MPC_RANGE,
  ONEUSDT: X50_MPC_RANGE,
  LINAUSDT: X50_MPC_RANGE,
  STMXUSDT: X50_MPC_RANGE,
  DENTUSDT: X50_MPC_RANGE,
  CELRUSDT: X50_MPC_RANGE,
  HOTUSDT: X50_MPC_RANGE,
  MTLUSDT: X50_MPC_RANGE,
  OGNUSDT: X50_MPC_RANGE,
  BTTUSDT: X50_MPC_RANGE,

  // 50X 2
  FILUSDT: X50_2_MPC_RANGE,
  AAVEUSDT: X50_2_MPC_RANGE,
  THETAUSDT: X50_2_MPC_RANGE,
  UNIUSDT: X50_2_MPC_RANGE,

  // 50X 3
  DOGEUSDT: X50_3_MPC_RANGE,
  SOLUSDT: X50_3_MPC_RANGE,
  MATICUSDT: X50_3_MPC_RANGE,

  // 25X
  NKNUSDT: X25_MPC_RANGE,
  SCUSDT: X25_MPC_RANGE,
  DGBUSDT: X25_MPC_RANGE,
  SHIBUSDT: X25_MPC_RANGE,
  ICPUSDT: X25_MPC_RANGE,
  BAKEUSDT: X25_MPC_RANGE,
  BTCDOM: X25_MPC_RANGE,
  KEEPUSDT: X25_MPC_RANGE,
};

module.exports.contracts = contracts;

module.exports.ORDER_TYPE_LIMIT = "LIMIT";
module.exports.ORDER_TYPE_MARKET = "MARKET";
module.exports.ORDER_TYPE_STOP = "STOP";
module.exports.ORDER_TYPE_STOP_MARKET = "STOP_MARKET";
module.exports.ORDER_TYPE_TAKE_PROFIT = "TAKE_PROFIT";
module.exports.ORDER_TYPE_TAKE_PROFIT_MARKET = "TAKE_PROFIT_MARKET";
module.exports.ORDER_TYPE_TRAILING_STOP_MARKET = "TRAILING_STOP_MARKET";
module.exports.ORDER_TYPES = [
  module.exports.ORDER_TYPE_LIMIT,
  module.exports.ORDER_TYPE_MARKET,
  module.exports.ORDER_TYPE_STOP,
  module.exports.ORDER_TYPE_STOP_MARKET,
  module.exports.ORDER_TYPE_TAKE_PROFIT,
  module.exports.ORDER_TYPE_TAKE_PROFIT_MARKET,
  module.exports.ORDER_TYPE_TRAILING_STOP_MARKET,
];

module.exports.ORDER_STATUS_NEW = "NEW";
module.exports.ORDER_STATUS_CREATED = "CREATED";
module.exports.ORDER_STATUS_PARTIALLY_FILLED = "PARTIALLY_FILLED";
module.exports.ORDER_STATUS_FILLED = "FILLED";
module.exports.ORDER_STATUS_CANCELLED = "CANCELED";
module.exports.ORDER_STATUS_REJECTED = "REJECTED";
module.exports.ORDER_STATUS_EXPIRED = "EXPIRED";
module.exports.ORDER_STATUS = [
  module.exports.ORDER_STATUS_NEW,
  module.exports.ORDER_STATUS_CREATED,
  module.exports.ORDER_STATUS_PARTIALLY_FILLED,
  module.exports.ORDER_STATUS_FILLED,
  module.exports.ORDER_STATUS_CANCELLED,
  module.exports.ORDER_STATUS_REJECTED,
  module.exports.ORDER_STATUS_EXPIRED,
];

module.exports.TRADE_STATUS_NEW = "NEW";
module.exports.TRADE_STATUS_CREATED = "CREATED";
module.exports.TRADE_STATUS_IN_PROGRESS = "IN_PROGRESS";
module.exports.TRADE_STATUS_COMPLETED = "COMPLETED";
module.exports.TRADE_STATUS = [
  module.exports.TRADE_STATUS_NEW,
  module.exports.TRADE_STATUS_CREATED,
  module.exports.TRADE_STATUS_IN_PROGRESS,
  module.exports.TRADE_STATUS_COMPLETED,
];

module.exports.BINANCE_WS_EVENT_TYPE_ACCOUNT_UPDATE = "ACCOUNT_UPDATE";
module.exports.BINANCE_WS_EVENT_TYPE_ORDER_TRADE_UPDATE = "ORDER_TRADE_UPDATE";
module.exports.BINANCE_WS_EVENT_REASON_TYPE_ORDER = "ORDER";
